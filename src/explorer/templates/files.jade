.files(data-bind="css: { savername: files.all().length == 1 && flavor() == 'saver' }")
  .filesinner
    header
      include selector
      // ko if: $root.isDesktop
      //- Actions
      .actions(data-bind='with: files')
        // ko if: allow_newdir
        a(data-bind='click: newdir').new-folder-button
        // /ko
        a(data-bind='click: refresh').refresh-button
        // ko if: $root.flavor() == 'chooser'
        form.search-form(data-bind="submit: search")
          a#search-back-button(data-bind='click: refresh').search
          input#search-query(type="text", placeholder="Search", data-bind="textInput: searchQuery, translate: {placeholder: { message: \"files/search\" }}").search
          a#search-enable-button.search
        // /ko

      //- Breadcrumbs
      .breadcrumbcontainer(data-bind='with: files')
        //- Default service breadcrumb
        // ko if: breadcrumbs().length == 0
        div.breadcrumbs
          span.crumb(data-bind='css: {current: parseInt("" + (breadcrumbs().length), 10) == 0}')
            a(data-bind='click: up.bind(null, breadcrumbs().length)')
              div.foldericon
              div.foldertext(data-bind='text: service_friendly')
        // /ko
        //- Un-collapsed breadcrumb
        // ko if: breadcrumbs().length > 0 && breadcrumbs().length < 2
        div.breadcrumbs
          span.crumb(data-bind='css: {current: parseInt("" + (breadcrumbs().length), 10) == 0}')
            a(data-bind='click: up.bind(null, breadcrumbs().length)')
              div.foldericon
              div.foldertext(data-bind='text: service_friendly')
          // ko foreach: breadcrumbs
          span.crumb(data-bind='css: {current: parseInt("" + ($parent.breadcrumbs().length - 1), 10) == parseInt("" + $index(), 10)}')
            a(data-bind='click: $parent.up.bind(null, $parent.breadcrumbs().length - parseInt("" + ($index() + 1), 10))')
              div.foldertext(data-bind='text: $data')
          // /ko
        // /ko
        //- Collapsed breadcrumb
        // ko if: breadcrumbs().length >= 2
        div.breadcrumbs
          div.crumbutton
            div.crumbmenuwrap
              ul.crumbmenu
                // ko foreach: breadcrumbs().slice(0, breadcrumbs().length - 1).reverse()
                li.crumb(data-bind='attr: {title: $data}')
                  a(data-bind='click: $parent.up.bind(null, parseInt("" + ($index() + 1), 10))')
                    div.foldericon
                    div.foldertext(data-bind='text: $data')
                // /ko
                li.crumb(data-bind='css: {current: parseInt("" + (breadcrumbs().length), 10) == 0}')
                  a(data-bind='click: up.bind(null, breadcrumbs().length)')
                    div.foldericon
                    div.foldertext(data-bind='text: service_friendly')
          span.crumb.fullwide(class='current')
            a(data-bind='click: up.bind(null, 0)')
              div.foldertext(data-bind='text: breadcrumbs()[(breadcrumbs().length - 1)]')
        // /ko
      // /ko
    // ko ifnot: $root.isDesktop
    .control-panel(data-bind='with: files')
      .icon-buttons
        .icon-button(data-bind='click: newdir')
          .icon-new-folder
        .icon-button(data-bind='click: refresh')
          .icon-new-refresh
      input(type="search", placeholder="Search", data-bind="textInput: searchQuery, translate: {placeholder: { message: \"files/search\" }}")
      select.navigator(data-bind="options: breadcrumbs, value:  breadcrumbs().slice().reverse()[0], event:{ change: navUp}")
    // /ko
    //- Current directory view
    table#fs-scroller(data-bind='with: files').clickable
      // ko if: $root.isDesktop
      thead
        tr
          th(data-bind='click: sort("name"), translate: "files/name"') Name
            .arrow-up#sort-name-up
            .arrow-down#sort-name-down
          th(data-bind='click: sort("largest"), translate: "files/size"') Size
            .arrow-up#sort-largest-up
            .arrow-down#sort-largest-down
          th(data-bind='click: sort("recent"), translate: "files/updated"') Updated
            .arrow-up#sort-recent-up
            .arrow-down#sort-recent-down
      // /ko

      tbody#fs-view-body(data-bind='finderSelect: $data')
        // ko if: cwd().length == 0 && !$root.loading()
        tr.info-row(align="center")
          td.info-cell
            div(data-bind='translate: "files/nofilesfound"') No Files Found
        // /ko
        // ko if: cwd().length > 0 && cwd()[0].type == "newfolder"
        tr.newfolder()
          td.newfolder()
            span()
              div.foldericon()
            span()
              input.new-folder-name(data-bind='attr: {value: "Untitled Folder"}, translate: {value: { message: "files/untitledfolder" }}')
            span(data-bind='click: mkdir')
              span.save-button.inline-button Save
            span(data-bind='click: rmdir')
              span.cancel-button.inline-button
                div.closeicon()
          // ko if: $root.isDesktop
          td.size
          td.updated()
          // /ko

        // /ko
        // ko foreach: cwd
        // ko ifnot: type == "disabled" || type == "newfolder"
        tr(data-bind="click: $parent.navigate, attr: {'data-type': type, 'title': path || ' '}")
          td
            span(data-bind='if: type == "folder"')
              div.foldericon()
            span(data-bind='if: type == "file"')
              div.fileicon()
            span(data-bind='text: name')
          // ko if: $root.isDesktop
          // ko if: (friendlySize == null || friendlySize == "")
          td.size
          // /ko
          // ko ifnot: (friendlySize == null || friendlySize == "")
          td.size(data-bind='translate: { html: friendlySize }')
          // /ko

          // ko if: (modified == null || modified == "") && created
          td.updated(data-bind='formatDate: created')
          // /ko
          // ko if: (modified == null || modified == "") && (created == null || created == "")
          td.updated
          // /ko
          // ko ifnot: modified == null || modified == ""
          td.updated(data-bind='formatDate: modified')
          // /ko
          // /ko
        // /ko
        // ko if: type == "disabled"
        tr.disabled(data-bind='if: type == "disabled"')
          td
            span
              div.fileicon()
            span(data-bind='text: name')
          // ko if: $root.isDesktop
          td.updated(data-bind='formatDate: modified')
          // /ko
        // /ko
        // /ko

    //- Footer buttons
    footer
      .row
        div.kloading(data-bind='visible: loading')
        div.error(data-alert, data-bind='visible: error().length > 0')
          div.error-text(data-bind='text: error, attr: {title: error}')
          a.close
        // ko if: files.all().length == 1 && flavor() == 'saver'
        input.kloudless-saver-name(type="text", data-bind='value: files.all()[0].name')
        // /ko
        .buttonscontainer
          a(data-bind='click: cancel, translate: "global/cancel"').button.reg Cancel
          // ko if: flavor() == 'chooser'
          a(data-bind='click: confirm, translate: "global/select"').button.blue Select
          // /ko
          // ko if: flavor() == 'saver'
          a(data-bind='click: save, translate: "global/save"').button.blue Save
          // /ko
        div(data-bind='template: {name: "powered-by-kl-footer"}')

    //- Debug info, since we don't have proper UI elements
